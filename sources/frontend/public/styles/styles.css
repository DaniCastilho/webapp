@font-face {
  font-family: 'Museo Sans 300';
  src: url("../fonts/Museo_Sans_300.eot");
  src: url("../fonts/Museo_Sans_300.eot?#iefix") format("embedded-opentype"), url("../fonts/Museo_Sans_300.woff") format("woff"), url("../fonts/Museo_Sans_300.svg") format("svg"), url("../fonts/Museo_Sans_300.ttf") format("truetype"); }

@font-face {
  font-family: 'Museo Sans 500';
  src: url("../fonts/Museo_Sans_500.eot");
  src: url("../fonts/Museo_Sans_500.eot?#iefix") format("embedded-opentype"), url("../fonts/Museo_Sans_500.woff") format("woff"), url("../fonts/Museo_Sans_500.svg") format("svg"), url("../fonts/Museo_Sans_500.ttf") format("truetype"); }

@font-face {
  font-family: 'Museo Sans 700';
  src: url("../fonts/Museo_Sans_700.eot");
  src: url("../fonts/Museo_Sans_700.eot?#iefix") format("embedded-opentype"), url("../fonts/Museo_Sans_700.woff") format("woff"), url("../fonts/Museo_Sans_700.svg") format("svg"), url("../fonts/Museo_Sans_700.ttf") format("truetype"); }

@font-face {
  font-family: 'Museo Slab 300';
  src: url("../fonts/Museo_Slab_300.eot");
  src: url("../fonts/Museo_Slab_300.eot?#iefix") format("embedded-opentype"), url("../fonts/Museo_Slab_300.woff") format("woff"), url("../fonts/Museo_Slab_300.woff2") format("woff2"), url("../fonts/Museo_Slab_300.svg") format("svg"), url("../fonts/Museo_Slab_300.ttf") format("truetype"); }

@font-face {
  font-family: 'Museo Slab 500';
  src: url("../fonts/Museo_Slab_500.eot");
  src: url("../fonts/Museo_Slab_500.eot?#iefix") format("embedded-opentype"), url("../fonts/Museo_Slab_500.woff") format("woff"), url("../fonts/Museo_Slab_500.woff2") format("woff2"), url("../fonts/Museo_Slab_500.svg") format("svg"), url("../fonts/Museo_Slab_500.ttf") format("truetype"); }

@font-face {
  font-family: 'Museo Slab 700';
  src: url("../fonts/Museo_Slab_700.eot");
  src: url("../fonts/Museo_Slab_700.eot?#iefix") format("embedded-opentype"), url("../fonts/Museo_Slab_700.woff") format("woff"), url("../fonts/Museo_Slab_700.woff2") format("woff2"), url("../fonts/Museo_Slab_700.svg") format("svg"), url("../fonts/Museo_Slab_700.ttf") format("truetype"); }

@font-face {
  font-family: 'Roboto-Bd';
  src: url("../fonts/Roboto-Bold.eot");
  src: url("../fonts/Roboto-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Bold.woff") format("woff"), url("../fonts/Roboto-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: 'Roboto-Lt';
  src: url("../fonts/Roboto-Light.eot");
  src: url("../fonts/Roboto-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Light.woff") format("woff"), url("../fonts/Roboto-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'Roboto-Md';
  src: url("../fonts/Roboto-Medium.eot");
  src: url("../fonts/Roboto-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Medium.woff") format("woff"), url("../fonts/Roboto-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'Roboto-Rg';
  src: url("../fonts/Roboto-Regular.eot");
  src: url("../fonts/Roboto-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Regular.woff") format("woff"), url("../fonts/Roboto-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  outline: none; }

*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

html {
  font-size: 16px;
  -webkit-tap-highlight-color: transparent; }

body {
  font-family: "Roboto-Bd";
  font-size: "10px";
  line-height: "1.2em";
  color: "Roboto-Bd";
  background-color: #fff;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility; }

input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

a {
  color: #00adf3;
  text-decoration: none;
  -webkit-transition: color 0.2s linear;
  transition: color 0.2s linear; }
  a:hover, a:focus {
    color: #00adf3;
    -webkit-text-decoration: "underline";
    text-decoration: "underline";
    text-decoration: none; }

figure {
  margin: 0; }

img {
  vertical-align: middle; }

h1, h2, h3, h4, h5, h6 {
  font-weight: normal; }

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0; }

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto; }

[role="button"] {
  cursor: pointer; }

@media (min-width: 768) {
  .only-mobile {
    display: none !important; } }

@media screen and (max-width: 767px) {
  .only-desk {
    display: none !important; } }

.stroke {
  text-decoration: line-through; }

.section__wrapper {
  margin: 70px auto 0 auto; }

.btn {
  padding: 15px 18px 15px 18px;
  display: block;
  border-radius: 4px; }

.media {
  margin-top: 15px; }
  .media:first-child {
    margin-top: 0; }

.media,
.media-body {
  zoom: 1;
  overflow: hidden; }

.media-body {
  width: 10000px; }

.media-object {
  display: block; }
  .media-object.img-thumbnail {
    max-width: none; }

.media-right,
.media > .pull-right {
  padding-left: 10px; }

.media-left,
.media > .pull-left {
  padding-right: 10px; }

.media-left,
.media-right,
.media-body {
  display: table-cell;
  vertical-align: top; }

.media-middle {
  vertical-align: middle; }

.media-bottom {
  vertical-align: bottom; }

.media-heading {
  margin-top: 0;
  margin-bottom: 5px; }

.media-list {
  padding-left: 0;
  list-style: none; }

header {
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 10;
  background-color: #461E5F; }
  @media (min-width: 768px) {
    header {
      height: 70px; } }

.header__center {
  margin: 0 auto; }
  .header__center .header__box-list {
    display: inline-block;
    text-align: center;
    padding: 0; }
    .header__center .header__box-list .header__box-list_item {
      display: inline-block; }
      .header__center .header__box-list .header__box-list_item .header__link {
        color: #fff; }
      .header__center .header__box-list .header__box-list_item.header__burguer {
        height: 16px;
        cursor: pointer; }

.header__box-left {
  width: 20%; }
  .header__box-left .header__box-left_item {
    margin: 0 10px; }
    .header__box-left .header__box-left_item .menu__burguer {
      display: block;
      width: 16px;
      height: 2px;
      background-color: #fff;
      position: relative; }
      .header__box-left .header__box-left_item .menu__burguer:before, .header__box-left .header__box-left_item .menu__burguer:after {
        display: block;
        content: "";
        background-color: #fff;
        width: 16px;
        height: 2px;
        position: absolute; }
      .header__box-left .header__box-left_item .menu__burguer:before {
        top: 6px; }
      .header__box-left .header__box-left_item .menu__burguer:after {
        top: 12px; }

.header__box-center {
  width: 50%;
  text-align: center; }
  .header__box-center .header__box-center_item {
    margin: 0 25px; }

.header__box-right {
  width: 20%; }
  .header__box-right .header__box-right_item {
    margin: 0 20px; }
    .header__box-right .header__box-right_item .header__regions:after {
      content: ">";
      font-size: 16px;
      -webkit-transform: rotate(90deg);
      transform: rotate(90deg);
      display: inline-block;
      margin-left: 10px; }

.footer {
  width: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
